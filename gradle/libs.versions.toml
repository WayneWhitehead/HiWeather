[versions]
agp = "8.8.0"
androidDecoviewCharting = "v1.2"
appDistribution = "5.1.0"
appcompat = "1.7.0"
coilCompose = "2.7.0"
compiler = "4.16.0"
compose = "1.0.0-beta01"
composeBom = "2025.01.00"
constraintlayoutCompose = "1.1.0"
coreKtx = "1.15.0"
coreTesting = "2.2.0"
coroutines= "1.8.1"
crashlytics = "3.0.2"
espressoCore = "3.5.0"
firebaseAnalyticsKtx = "22.0.2"
firebaseCrashlyticsKtx = "19.0.2"
glide = "4.16.0"
googleServices = "4.4.2"
gson = "2.11.0"
hilt = "2.55"
hiltTesting = "2.52"
hiltCompiler = "1.2.0"
junit = "4.13.2"
kotlin = "1.9.0"
kotlinStdlibJdk8 = "1.9.0"
kotlinxCoroutinesTest = "1.8.1"
kotlinxSerializationJson = "1.7.0"
legacySupportV4 = "1.0.0"
lifecycle = "2.8.7"
lifecycleExtensions = "2.2.0"
lottieCompose = "6.6.2"
material = "1.12.0"
mockitoKotlin = "5.1.0"
mockk = "1.13.11"
navigationCompose = "2.8.5"
okhttp = "4.12.0"
okhttpprofiler = "1.0.8"
permissionx = "1.8.0"
places = "4.1.0"
playServicesAds = "23.1.0"
playServicesLocation = "21.3.0"
retrofit = "2.11.0"
robolectric = "4.10.3"
secrets = "2.0.1"
swiperefreshlayout = "1.1.0"
timber = "5.0.1"
uiTest = "1.7.6"
workRuntimeKtx = "2.10.0"
workRuntimeKtxVersion = "1.0.1"

[libraries]
android-decoview-charting = { module = "com.github.bmarrdev:android-DecoView-charting", version.ref = "androidDecoviewCharting" }
androidx-activity-compose = { module = "androidx.activity:activity-compose" }
androidx-animation-core = { module = "androidx.compose.animation:animation-core" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-foundation = { module = "androidx.compose.foundation:foundation" }
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltCompiler" }
androidx-hilt-navigation-fragment = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltCompiler" }
androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hiltCompiler" }
androidx-legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacySupportV4" }
androidx-lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensions" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
androidx-material3 = { module = "androidx.compose.material3:material3" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-runtime = { module = "androidx.compose.runtime:runtime" }
androidx-runtime-android = { module = "androidx.compose.runtime:runtime-android" }
androidx-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swiperefreshlayout" }
androidx-ui = { module = "androidx.compose.ui:ui" }
androidx-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
androidx-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "uiTest" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "uiTest" }
androidx-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-ui-tooling-preview-android = { module = "androidx.compose.ui:ui-tooling-preview-android" }
androidx-ui-viewbinding = { module = "androidx.compose.ui:ui-viewbinding" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "compiler" }
compose = { module = "com.github.bumptech.glide:compose", version.ref = "compose" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx", version.ref = "firebaseAnalyticsKtx" }
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx", version.ref = "firebaseCrashlyticsKtx" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hiltTesting" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlinStdlibJdk8" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieCompose" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttpprofiler = { module = "com.localebro:okhttpprofiler", version.ref = "okhttpprofiler" }
permissionx = { module = "com.guolindev.permissionx:permissionx", version.ref = "permissionx" }
places = { module = "com.google.android.libraries.places:places", version.ref = "places" }
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
work-runtime-ktx = { module = "android.arch.work:work-runtime-ktx", version.ref = "workRuntimeKtxVersion" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
firebase-appdistribution = { id = "com.google.firebase.appdistribution", version.ref = "appDistribution" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets" }
name: PR Linting

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check-hardcoded-values:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17
          java-package: jdk
          architecture: x64
          check-latest: false

      - name: Get list of changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            app/src/main/java/**/*.kt

      - name: Find hardcoded values in changed lines
        id: find-hardcoded-values
        run: |
          set -e
          WARNINGS=""
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            FILE_NAME=$(basename $file)
            # Get the diff of the changed file
            DIFF_LINES=$(git diff HEAD^ --unified=0 $file | grep -E '^\+[^+]' | grep -nE '"[^"]*"|[0-9]+\.dp' | grep -v 'const val' | grep -v '@SerializedName') || true
            if [ ! -z "$DIFF_LINES" ]; then
              WARNINGS="$WARNINGS\n$file:$DIFF_LINES"
            fi
          done
          if [ ! -z "$WARNINGS" ]; then
            echo "::warning::Hardcoded values found in the changed files."
            echo "warnings=$WARNINGS" >> $GITHUB_ENV
          fi
        shell: /usr/bin/bash -e {0}
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/17.0.14-7/x64

      - name: Post review comments
        uses: actions/github-script@v5
        with:
          script: |
            const warnings = process.env.warnings.split('\n').filter(Boolean);
            for (const warning of warnings) {
              const [file, lines] = warning.split(':');
              const lineNumbers = lines.split(',').map(line => line.split(':')[0]);
              for (const line of lineNumbers) {
                await github.rest.pulls.createReviewComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.payload.pull_request.number,
                  body: `Hardcoded value found in ${file} at line ${line}`,
                  path: file,
                  line: parseInt(line, 10),
                });
              }
            }
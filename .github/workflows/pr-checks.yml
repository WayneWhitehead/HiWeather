name: PR Linting

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check-hardcoded-values:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17
          java-package: jdk
          architecture: x64
          check-latest: false

      - name: Find and comment on hardcoded values
        uses: actions/github-script@v5
        with:
          script: |

            // Get the list of changed files
            const changedFiles = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            // Get existing comments
            const existingComments = await github.rest.pulls.listReviewComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            for (const file of changedFiles.data) {
              if (file.filename.endsWith('.kt')) {
                // Get the diff of the changed file
                const diffLines = file.patch.split('\n').filter(line => line.startsWith('+') && !line.startsWith('++'));

                let lineNumber = 0;
                let position = 0;
                for (const line of file.patch.split('\n')) {
                  if (line.startsWith('@@')) {
                    // Extract the starting line number from the diff hunk header
                    const match = line.match(/@@ \-(\d+),\d+ \+(\d+),\d+ @@/);
                    if (match) {
                      lineNumber = parseInt(match[2]) - 1;
                      position = 0;
                    }
                  } else if (line.startsWith('+')) {
                    lineNumber++;
                    position++;
                    if (line.match(/"[^"]*"|[0-9]+\.dp/) && !line.includes('const val') && !line.includes('@SerializedName')) {
                      const message = `Hardcoded value found: ${line.trim()}`;

                      console.log(`File: ${file.filename}`);
                      console.log(`Line Number: ${lineNumber}`);
                      console.log(`Position: ${position}`);
                      console.log(`Message: ${message}`);

                      // Check if there's already a comment from this bot on this line
                      const existingComment = existingComments.data.find(comment => 
                        comment.path === file.filename && comment.position === position && comment.user.login === context.actor
                      );

                      if (!existingComment) {
                        // Post a comment on the pull request
                        await github.rest.pulls.createReviewComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          pull_number: context.payload.pull_request.number,
                          body: message,
                          commit_id: context.payload.pull_request.head.sha,
                          path: file.filename,
                          position: position
                        });
                      } else {
                        console.log(`Comment already exists from this bot on ${file.filename} at position ${position}`);
                      }
                    }
                  } else if (!line.startsWith('-')) {
                    lineNumber++;
                  }
                }
              }
            }
name: PR Linting

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check-hardcoded-values:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17
          java-package: jdk
          architecture: x64
          check-latest: false

      - name: Get list of changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            app/src/main/java/**/*.kt

      - name: Find hardcoded values in changed lines
        id: find-hardcoded-values
        run: |
          set -e
          FILES=()
          LINES=()
          VALUES=()
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            FILE_NAME=$(basename $file)
            DIFF_LINES=$(git diff HEAD^ --unified=0 $file | grep -E '^\+[^+]' | grep -nE '"[^"]*"|[0-9]+\.dp' | grep -v 'const val' | grep -v '@SerializedName') || true
            if [ ! -z "$DIFF_LINES" ]; then
              FILES+=("$file")
              LINES+=("$DIFF_LINES")
              VALUES+=("Hardcoded value found in $file")
            fi
          done
          echo "FILES=${FILES[@]}" >> $GITHUB_ENV
          echo "LINES=${LINES[@]}" >> $GITHUB_ENV
          echo "VALUES=${VALUES[@]}" >> $GITHUB_ENV
        shell: /usr/bin/bash -e {0}

      - name: Post warnings as comments
        run: |
          FILES=(${FILES[@]})
          LINES=(${LINES[@]})
          VALUES=(${VALUES[@]})
          for i in "${!FILES[@]}"; do
            github.rest.pulls.createReviewComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: "${VALUES[$i]}",
              commit_id: context.payload.pull_request.head.sha,
              path: "${FILES[$i]}",
              line: "${LINES[$i]}"
            });
          done
        shell: node